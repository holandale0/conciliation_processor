-- DROP PROCEDURE public.process_external_transaction(uuid, varchar, varchar, varchar, varchar, timestamp, timestamp, timestamp, timestamp, float8, float8, float8, float8, varchar, varchar, int4, int4, varchar, varchar, varchar, varchar, varchar, varchar, varchar, varchar, varchar, varchar, varchar, varchar, varchar);

CREATE OR REPLACE PROCEDURE public.process_external_transaction(IN p_id uuid, IN p_external_id character varying, IN p_acquirer character varying, IN p_colector character varying, IN p_document character varying, IN p_transaction_datetime timestamp without time zone, IN p_settlement_datetime timestamp without time zone, IN p_enqueue_datetime timestamp without time zone, IN p_colect_datetime timestamp without time zone, IN p_net_value double precision, IN p_gross_value double precision, IN p_fee double precision, IN p_fee_value double precision, IN p_card_flag character varying, IN p_card_number character varying, IN p_total_installments integer, IN p_installment integer, IN p_transaction_code character varying, IN p_authorization_code character varying, IN p_transaction_type character varying, IN p_payment_channel character varying, IN p_destaxa_transaction character varying, IN p_terminal_id character varying, IN p_lot_code character varying, IN p_lot_status character varying, IN p_settlement_type character varying, IN p_event character varying, IN p_sales_id character varying, IN p_sales_code character varying, IN p_usn character varying)
 LANGUAGE plpgsql
AS $procedure$
BEGIN
    IF p_settlement_datetime IS NULL THEN
        -- Executa o INSERT/ON CONFLICT na tabela external_transaction
        INSERT INTO external_transaction (
            id,
            external_id,
            acquirer,
            colector,
            document,
            transaction_datetime,
            settlement_datetime,
            enqueue_datetime,
            colect_datetime,
            net_value,
            gross_value,
            fee,
            fee_value,
            card_flag,
            card_number,
            total_installments,
            installment,
            transaction_code,
            authorization_code,
            transaction_type,
            payment_channel,
            destaxa_transaction,
            terminal_id,
            lot_code,
            lot_status,
            sales_id,
            sales_code,
            usn
        ) VALUES (
            p_id,
            p_external_id,
            p_acquirer,
            p_colector,
            p_document,
            p_transaction_datetime,
            p_settlement_datetime,
            p_enqueue_datetime,
            p_colect_datetime,
            p_net_value,
            p_gross_value,
            p_fee,
            p_fee_value,
            p_card_flag,
            p_card_number,
            p_total_installments,
            p_installment,
            p_transaction_code,
            p_authorization_code,
            p_transaction_type,
            p_payment_channel,
            p_destaxa_transaction,
            p_terminal_id,
            p_lot_code,
            p_lot_status,
            p_sales_id,
            p_sales_code,
            p_usn
        )
        ON CONFLICT (document, external_id, authorization_code, transaction_code, total_installments, acquirer, colector)
        DO UPDATE SET
            transaction_datetime = COALESCE(EXCLUDED.transaction_datetime, external_transaction.transaction_datetime),
            settlement_datetime = COALESCE(EXCLUDED.settlement_datetime, external_transaction.settlement_datetime),
            enqueue_datetime = COALESCE(EXCLUDED.enqueue_datetime, external_transaction.enqueue_datetime),
            colect_datetime = COALESCE(EXCLUDED.colect_datetime, external_transaction.colect_datetime),
            net_value = COALESCE(EXCLUDED.net_value, external_transaction.net_value),
            gross_value = COALESCE(EXCLUDED.gross_value, external_transaction.gross_value),
            fee = COALESCE(EXCLUDED.fee, external_transaction.fee),
            fee_value = COALESCE(EXCLUDED.fee_value, external_transaction.fee_value),
            card_flag = COALESCE(EXCLUDED.card_flag, external_transaction.card_flag),
            card_number = COALESCE(EXCLUDED.card_number, external_transaction.card_number),
            total_installments = COALESCE(EXCLUDED.total_installments, external_transaction.total_installments),
            installment = COALESCE(EXCLUDED.installment, external_transaction.installment),
            transaction_code = COALESCE(EXCLUDED.transaction_code, external_transaction.transaction_code),
            authorization_code = COALESCE(EXCLUDED.authorization_code, external_transaction.authorization_code),
            transaction_type = COALESCE(EXCLUDED.transaction_type, external_transaction.transaction_type),
            payment_channel = COALESCE(EXCLUDED.payment_channel, external_transaction.payment_channel),
            destaxa_transaction = COALESCE(EXCLUDED.destaxa_transaction, external_transaction.destaxa_transaction),
            terminal_id = COALESCE(EXCLUDED.terminal_id, external_transaction.terminal_id),
            lot_code = COALESCE(EXCLUDED.lot_code, external_transaction.lot_code),
            lot_status = COALESCE(EXCLUDED.lot_status, external_transaction.lot_status),
            sales_id = COALESCE(EXCLUDED.sales_id, external_transaction.sales_id),
            sales_code = COALESCE(EXCLUDED.sales_code, external_transaction.sales_code),
            usn = COALESCE(EXCLUDED.usn, external_transaction.usn);

    ELSE
        -- Executa o INSERT/ON CONFLICT na tabela external_receivable
        INSERT INTO external_receivable (
            id,
            external_id,
            acquirer,
            colector,
            document,
            settlement_datetime,
            enqueue_datetime,
            colect_datetime,
            net_value,
            gross_value,
            fee,
            fee_value,
            card_flag,
            card_number,
            total_installments,
            installment,
            transaction_code,
            authorization_code,
            transaction_type,
            payment_channel,
            destaxa_transaction,
            terminal_id,
            lot_code,
            lot_status,
            settlement_type,
            event_name,
            sales_id,
            sales_code,
            usn
        ) VALUES (
            p_id,
            p_external_id,
            p_acquirer,
            p_colector,
            p_document,
            p_settlement_datetime,
            p_enqueue_datetime,
            p_colect_datetime,
            p_net_value,
            p_gross_value,
            p_fee,
            p_fee_value,
            p_card_flag,
            p_card_number,
            p_total_installments,
            p_installment,
            p_transaction_code,
            p_authorization_code,
            p_transaction_type,
            p_payment_channel,
            p_destaxa_transaction,
            p_terminal_id,
            p_lot_code,
            p_lot_status,
            p_settlement_type,
            p_event,
            p_sales_id,
            p_sales_code,
            p_usn
        )
        ON CONFLICT (document, external_id, authorization_code, transaction_code, total_installments, acquirer, colector)
        DO UPDATE SET
            settlement_datetime = COALESCE(EXCLUDED.settlement_datetime, external_receivable.settlement_datetime),
            enqueue_datetime = COALESCE(EXCLUDED.enqueue_datetime, external_receivable.enqueue_datetime),
            colect_datetime = COALESCE(EXCLUDED.colect_datetime, external_receivable.colect_datetime),
            net_value = COALESCE(EXCLUDED.net_value, external_receivable.net_value),
            gross_value = COALESCE(EXCLUDED.gross_value, external_receivable.gross_value),
            fee = COALESCE(EXCLUDED.fee, external_receivable.fee),
            fee_value = COALESCE(EXCLUDED.fee_value, external_receivable.fee_value),
            card_flag = COALESCE(EXCLUDED.card_flag, external_receivable.card_flag),
            card_number = COALESCE(EXCLUDED.card_number, external_receivable.card_number),
            total_installments = COALESCE(EXCLUDED.total_installments, external_receivable.total_installments),
            installment = COALESCE(EXCLUDED.installment, external_receivable.installment),
            transaction_code = COALESCE(EXCLUDED.transaction_code, external_receivable.transaction_code),
            authorization_code = COALESCE(EXCLUDED.authorization_code, external_receivable.authorization_code),
            transaction_type = COALESCE(EXCLUDED.transaction_type, external_receivable.transaction_type),
            payment_channel = COALESCE(EXCLUDED.payment_channel, external_receivable.payment_channel),
            destaxa_transaction = COALESCE(EXCLUDED.destaxa_transaction, external_receivable.destaxa_transaction),
            terminal_id = COALESCE(EXCLUDED.terminal_id, external_receivable.terminal_id),
            lot_code = COALESCE(EXCLUDED.lot_code, external_receivable.lot_code),
            settlement_type  = COALESCE(EXCLUDED.settlement_type, external_receivable.settlement_type),
            event_name  = COALESCE(EXCLUDED.event_name, external_receivable.event_name),
            lot_status = COALESCE(EXCLUDED.lot_status, external_receivable.lot_status),
            sales_id = COALESCE(EXCLUDED.sales_id, external_receivable.sales_id),
            sales_code = COALESCE(EXCLUDED.sales_code, external_receivable.sales_code),
            usn = COALESCE(EXCLUDED.usn, external_receivable.usn);
    END IF;
END;
$procedure$
;
